package com.e_commerce.controller;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.web.bind.annotation.*;

import com.e_commerce.dto.AuthRequest;
import com.e_commerce.entity.User;
import com.e_commerce.security.JWTUtil;
import com.e_commerce.service.UserService;

@RestController
@RequestMapping("/api/auth")
public class AuthController {

    @Autowired
    private AuthenticationManager authenticationManager;

    @Autowired
    private JWTUtil jwtUtil;

    @Autowired
    private UserService userService;

//    @PostMapping("/login")
//    public String login(@RequestBody AuthRequest authRequest) {
//        authenticationManager.authenticate(
//                new UsernamePasswordAuthenticationToken(authRequest.getUsername(), authRequest.getPassword())
//        );
//        return jwtUtil.generateToken(authRequest.getUsername());
//    }

    
    @PostMapping("/login")
    public String login(@RequestBody AuthRequest authRequest) {
    	System.out.println(authRequest);
        authenticationManager.authenticate(
            new UsernamePasswordAuthenticationToken(authRequest.getUsername(), authRequest.getPassword())
        );
        return jwtUtil.generateToken(authRequest.getUsername());
    }

//    @PostMapping("/register")
//    public User register(@RequestBody User user) {
//        return userService.save(user);
//    }
    
    @PostMapping("/register")
    @ResponseBody
    public ResponseEntity<?> register(@RequestBody User user) {
        if(user.getPassword() == null || user.getPassword().trim().isEmpty()){
            return ResponseEntity.badRequest().body("Password is required.");
        }
        User savedUser = userService.save(user);
        return ResponseEntity.ok(savedUser);
    }

}

